import{_ as s,o as n,c as l,Q as a}from"./chunks/framework.f0aa7f6c.js";const o="/blog/assets/image-1.f40bcd5d.png",p="/blog/assets/image.0a27cabd.png",t="/blog/assets/Snipaste_2023-11-29_14-17-54.140d4e15.png",e="/blog/assets/Snipaste_2023-11-29_14-58-12.5e6f0310.png",c="/blog/assets/image-2.eef6d669.png",_=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"category/others/linux/前端需要了解的nginx知识.md","filePath":"category/others/linux/前端需要了解的nginx知识.md"}'),y={name:"category/others/linux/前端需要了解的nginx知识.md"},i=a('<p><a href="https://zhuanlan.zhihu.com/p/225842782?utm_id=0" target="_blank" rel="noreferrer">参考：知乎（就是要让你搞懂 Nginx，这篇就够了！）</a></p><blockquote><p>虽然<code>nginx</code>是跨平台的，但是由于一般服务器都是<code>linux</code>系统，所以将此文章分类到<code>linux</code>下，不再单独弄一个分类了。但是本文的所有操作还是在<code>windows 11</code>上进行的。其实不管在什么系统上操作<code>nginx</code>的配置文件都是一样的，没有什么大的区别。</p></blockquote><h2 id="正向代理与反向代理" tabindex="-1">正向代理与反向代理 <a class="header-anchor" href="#正向代理与反向代理" aria-label="Permalink to &quot;正向代理与反向代理&quot;">​</a></h2><blockquote><p>Nginx 是一个高性能的 HTTP 和反向代理服务器，特点是占用内存少，并发能力强，事实上 nginx 的并发能力确实在同类型的网页服务器中表现较好</p></blockquote><h3 id="正向代理" tabindex="-1">正向代理 <a class="header-anchor" href="#正向代理" aria-label="Permalink to &quot;正向代理&quot;">​</a></h3><p>理解反向代理前我们需要先理解正向代理，那么什么是正向代理呢？其实我们如果使用过 VPN 就大概知道什么是正向代理了。盗用网上一张图片如下：所谓正向代理就是将我们客户端的请求通过代理服务器发送到目标服务器。例如我们需要访问www.google.com，在国内正常情况下我们是无法访问的，所以就需要用到VPN，其实VPN就是在给我们客户端的请求进行正向代理。也就是我们发送的网络请求先通过VPN转发到VPN代理服务器上，代理服务器再将我们的请求转发到www.google.com服务器上。这个过程的前提就是我们的网络能够正常访问VPN服务器，且VPN服务器能够正常访问www.google.com服务器。 <img src="'+o+'" alt="正向代理"></p><h3 id="反向代理" tabindex="-1">反向代理 <a class="header-anchor" href="#反向代理" aria-label="Permalink to &quot;反向代理&quot;">​</a></h3><p>反向代理对于用户来说是无法感知的（以上面例子为例，正向代理需要手动安装 VPN），用户只需要把请求发送到反向代理服务器就可以了。具体反向代理服务器实际将你的请求代理到哪台服务器用户是无法感知的。反向代理可以用来左负载均衡，如果网站访问并发量大，可能需要用到多台服务器来做负载均衡。这时候就可以通过<code>nginx</code>来进行配置。也就是将很多用户的请求代理转发到多台不同的服务器上，这样每台服务器需要处理的请求就少了。 <img src="'+p+'" alt="反向代理"></p><h3 id="nginx-安装与配置" tabindex="-1">nginx 安装与配置 <a class="header-anchor" href="#nginx-安装与配置" aria-label="Permalink to &quot;nginx 安装与配置&quot;">​</a></h3><p><a href="https://nginx.org/en/download.html" target="_blank" rel="noreferrer">下载地址</a> 下载完成后解压缩然后双击<code>nginx.exe</code>启动<code>nginx</code>即可，启动成功后我们访问<code>localhost</code>可以看到如下的一个默认页面 <img src="'+t+`" alt="Alt text"> 这个默认页面是如何加载的呢？我们需要找到我们之前解压缩 nginx 文件路径，该文件夹下有一个<code>conf</code>文件夹，该文件夹下有一个<code>nginx.conf</code>文件。内容如下：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;"># 指定 Nginx 启动时的工作进程数量</span></span>
<span class="line"><span style="color:#E1E4E8;">worker_processes  </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">events {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">#</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">定义</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">Nginx</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">事件模块的配置，其中</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">worker_connections</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">指定每个工作进程的最大连接数为</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">1024</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">worker_connections</span><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;font-style:italic;">1024;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">http {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">#</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">引入了</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">mime.types</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">文件，该文件定义了文件扩展名与</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">MIME</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">类型之间的映射关系</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">include</span><span style="color:#E1E4E8;">       </span><span style="color:#FDAEB7;font-style:italic;">mime.types;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">#</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">指定默认的</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">MIME</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">类型为</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">application/octet-stream，即未知类型的文件默认以二进制流的方式传输</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">default_type</span><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;font-style:italic;">application/octet-stream;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">#</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">启用了</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">sendfile</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">功能，用于在磁盘文件和网络</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">socket</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">之间直接传输数据，提高文件传输效率。</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">sendfile</span><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;font-style:italic;">on;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">#</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">指定客户端与服务器之间的</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">keep-alive</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">连接超时时间为</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">65</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">秒</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">keepalive_timeout</span><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;font-style:italic;">65;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">#</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">定义了一个</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">HTTP</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">服务器块，监听在</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">80</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">端口，服务器名为</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">localhost</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;font-style:italic;">listen</span><span style="color:#E1E4E8;">       </span><span style="color:#FDAEB7;font-style:italic;">80;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;font-style:italic;">server_name</span><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;font-style:italic;">localhost;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;font-style:italic;">#</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">配置了根路径</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">的访问规则，指定了根目录为</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">html，并且指定了默认的索引文件为</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">index.html</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">或</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">index.htm</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;font-style:italic;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#FDAEB7;font-style:italic;">root</span><span style="color:#E1E4E8;">   </span><span style="color:#FDAEB7;font-style:italic;">html;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#FDAEB7;font-style:italic;">index</span><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;font-style:italic;">index.html</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">index.htm;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        # 配置了当发生 </span><span style="color:#79B8FF;">500</span><span style="color:#E1E4E8;">、</span><span style="color:#79B8FF;">502</span><span style="color:#E1E4E8;">、</span><span style="color:#79B8FF;">503</span><span style="color:#E1E4E8;">、</span><span style="color:#79B8FF;">504</span><span style="color:#E1E4E8;"> 错误时，跳转到 /</span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">x.html 页面</span></span>
<span class="line"><span style="color:#E1E4E8;">        error_page   </span><span style="color:#79B8FF;">500</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">502</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">503</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">504</span><span style="color:#E1E4E8;">  /</span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">x.html;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        # 配置了 /</span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">x.html 页面的访问规则，指定了该页面的根目录为 html</span></span>
<span class="line"><span style="color:#E1E4E8;">        location = /</span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">x.html {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#FDAEB7;font-style:italic;">root</span><span style="color:#E1E4E8;">   </span><span style="color:#FDAEB7;font-style:italic;">html;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;"># 指定 Nginx 启动时的工作进程数量</span></span>
<span class="line"><span style="color:#24292E;">worker_processes  </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">events {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">#</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">定义</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">Nginx</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">事件模块的配置，其中</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">worker_connections</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">指定每个工作进程的最大连接数为</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">1024</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">worker_connections</span><span style="color:#24292E;">  </span><span style="color:#B31D28;font-style:italic;">1024;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">http {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">#</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">引入了</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">mime.types</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">文件，该文件定义了文件扩展名与</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">MIME</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">类型之间的映射关系</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">include</span><span style="color:#24292E;">       </span><span style="color:#B31D28;font-style:italic;">mime.types;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">#</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">指定默认的</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">MIME</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">类型为</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">application/octet-stream，即未知类型的文件默认以二进制流的方式传输</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">default_type</span><span style="color:#24292E;">  </span><span style="color:#B31D28;font-style:italic;">application/octet-stream;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">#</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">启用了</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">sendfile</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">功能，用于在磁盘文件和网络</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">socket</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">之间直接传输数据，提高文件传输效率。</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">sendfile</span><span style="color:#24292E;">        </span><span style="color:#B31D28;font-style:italic;">on;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">#</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">指定客户端与服务器之间的</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">keep-alive</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">连接超时时间为</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">65</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">秒</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">keepalive_timeout</span><span style="color:#24292E;">  </span><span style="color:#B31D28;font-style:italic;">65;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">#</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">定义了一个</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">HTTP</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">服务器块，监听在</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">80</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">端口，服务器名为</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">localhost</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">server</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">{</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;font-style:italic;">listen</span><span style="color:#24292E;">       </span><span style="color:#B31D28;font-style:italic;">80;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;font-style:italic;">server_name</span><span style="color:#24292E;">  </span><span style="color:#B31D28;font-style:italic;">localhost;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;font-style:italic;">#</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">配置了根路径</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">/</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">的访问规则，指定了根目录为</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">html，并且指定了默认的索引文件为</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">index.html</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">或</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">index.htm</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;font-style:italic;">location</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">/</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">{</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#B31D28;font-style:italic;">root</span><span style="color:#24292E;">   </span><span style="color:#B31D28;font-style:italic;">html;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#B31D28;font-style:italic;">index</span><span style="color:#24292E;">  </span><span style="color:#B31D28;font-style:italic;">index.html</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">index.htm;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        # 配置了当发生 </span><span style="color:#005CC5;">500</span><span style="color:#24292E;">、</span><span style="color:#005CC5;">502</span><span style="color:#24292E;">、</span><span style="color:#005CC5;">503</span><span style="color:#24292E;">、</span><span style="color:#005CC5;">504</span><span style="color:#24292E;"> 错误时，跳转到 /</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">x.html 页面</span></span>
<span class="line"><span style="color:#24292E;">        error_page   </span><span style="color:#005CC5;">500</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">502</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">503</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">504</span><span style="color:#24292E;">  /</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">x.html;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        # 配置了 /</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">x.html 页面的访问规则，指定了该页面的根目录为 html</span></span>
<span class="line"><span style="color:#24292E;">        location = /</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">x.html {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#B31D28;font-style:italic;">root</span><span style="color:#24292E;">   </span><span style="color:#B31D28;font-style:italic;">html;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>从上面文件我们可以知道默认情况下我们访问 localhost 走的是这里，也就是加载当前 html/index.html 文件，解压后的 linux 文件夹下就有<code>html</code>文件夹，且其内部包含是<code>index.html</code>与<code>50x.html</code>文件</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">location / {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">root</span><span style="color:#E1E4E8;">   </span><span style="color:#FDAEB7;font-style:italic;">html;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">index</span><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;font-style:italic;">index.html</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">index.htm;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">location / {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">root</span><span style="color:#24292E;">   </span><span style="color:#B31D28;font-style:italic;">html;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">index</span><span style="color:#24292E;">  </span><span style="color:#B31D28;font-style:italic;">index.html</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">index.htm;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="暴露静态文件夹" tabindex="-1">暴露静态文件夹 <a class="header-anchor" href="#暴露静态文件夹" aria-label="Permalink to &quot;暴露静态文件夹&quot;">​</a></h2><p>有时候我们需要将一个图片资源文件夹暴露出去让外部可以访问，只需要在<code>nginx</code>的配置文件<code>nginx.conf</code>中添加相应配置即可。修改<code>nginx.conf</code>配置文件保存后需要使用如下命令<code>nginx -s reload</code>重启一下<code>nginx</code>，例如我 D 盘下有个 images 文件下，可以在 80 server 添加一个 location。配置如下：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;"># 通过localhost/assets/访问</span></span>
<span class="line"><span style="color:#E1E4E8;">location /assets/ {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">alias</span><span style="color:#E1E4E8;">   </span><span style="color:#FDAEB7;font-style:italic;">D</span><span style="color:#E1E4E8;">:</span><span style="color:#FDAEB7;font-style:italic;">/images/;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">access_log</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">logs;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">autoindex</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">on;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;"># 通过localhost/assets/访问</span></span>
<span class="line"><span style="color:#24292E;">location /assets/ {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">alias</span><span style="color:#24292E;">   </span><span style="color:#B31D28;font-style:italic;">D</span><span style="color:#24292E;">:</span><span style="color:#B31D28;font-style:italic;">/images/;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">access_log</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">logs;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">autoindex</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">on;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>或</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;"># 通过localhost/images/访问</span></span>
<span class="line"><span style="color:#E1E4E8;">location /images/ {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">root</span><span style="color:#E1E4E8;">   </span><span style="color:#FDAEB7;font-style:italic;">D</span><span style="color:#E1E4E8;">:</span><span style="color:#FDAEB7;font-style:italic;">/;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">access_log</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">logs;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">autoindex</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">on;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;"># 通过localhost/images/访问</span></span>
<span class="line"><span style="color:#24292E;">location /images/ {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">root</span><span style="color:#24292E;">   </span><span style="color:#B31D28;font-style:italic;">D</span><span style="color:#24292E;">:</span><span style="color:#B31D28;font-style:italic;">/;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">access_log</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">logs;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">autoindex</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">on;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>这时我们可以通过 localhost/assets/看到所有图片文件，如下： <img src="`+e+`" alt="Alt text"></p><h2 id="反向代理-将请求代理到其他服务器" tabindex="-1">反向代理（将请求代理到其他服务器） <a class="header-anchor" href="#反向代理-将请求代理到其他服务器" aria-label="Permalink to &quot;反向代理（将请求代理到其他服务器）&quot;">​</a></h2><p>在<code>nginx.conf</code>下新增一个<code>server</code>，配置如下：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">server {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">listen</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">81;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">server_name</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">localhost;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;font-style:italic;">proxy_pass</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">http</span><span style="color:#E1E4E8;">:</span><span style="color:#6A737D;">//localhost:3000/;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;font-style:italic;">proxy_set_header</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">HOST</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">$host;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;font-style:italic;">proxy_set_header</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">X-Real-IP</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">$remote_addr;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;font-style:italic;">proxy_set_header</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">X-Forwarded-For</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">$proxy_add_x_forwarded_for;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">server {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">listen</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">81;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">server_name</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">localhost;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">location</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">/</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">{</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;font-style:italic;">proxy_pass</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">http</span><span style="color:#24292E;">:</span><span style="color:#6A737D;">//localhost:3000/;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;font-style:italic;">proxy_set_header</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">HOST</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">$host;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;font-style:italic;">proxy_set_header</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">X-Real-IP</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">$remote_addr;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;font-style:italic;">proxy_set_header</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">X-Forwarded-For</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">$proxy_add_x_forwarded_for;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>当我们访问 localhost:81 的时候会自动代理到 localhost:3000 上，这里我 localhost:3000 启动了一个前端程序。效果如下：可以看到地址栏中的 url 是 81 端口，但是实际走的确实我本地启动的 3000 端口程序服务。 <img src="`+c+`" alt="Alt text"></p><blockquote><p>使用此功能可以将我们前端程序和接口部署到同一个端口上，在同一个 server 下增加一个 location 即可。location /用来访问网页，location /api 用来访问接口。</p></blockquote><h2 id="负载均衡-将请求代理到多台服务器" tabindex="-1">负载均衡（将请求代理到多台服务器） <a class="header-anchor" href="#负载均衡-将请求代理到多台服务器" aria-label="Permalink to &quot;负载均衡（将请求代理到多台服务器）&quot;">​</a></h2><p>负载均衡其实和反向代理一样，只是需要创建一个服务器群，然后将反向代理的地址指向这个服务器群即可。配置如下：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">http {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">upstream</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">backend</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;font-style:italic;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">localhost</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">3000</span><span style="color:#FDAEB7;font-style:italic;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;font-style:italic;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">localhost:</span><span style="color:#79B8FF;">3001</span><span style="color:#FDAEB7;font-style:italic;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    server {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;font-style:italic;">listen</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">82;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;font-style:italic;">server_name</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">localhost;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;font-style:italic;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#FDAEB7;font-style:italic;">proxy_pass</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">http</span><span style="color:#E1E4E8;">:</span><span style="color:#6A737D;">//backend;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#FDAEB7;font-style:italic;">proxy_set_header</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">Host</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">$host;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#FDAEB7;font-style:italic;">proxy_set_header</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">X-Real-IP</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">$remote_addr;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#FDAEB7;font-style:italic;">proxy_set_header</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">X-Forwarded-For</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">$proxy_add_x_forwarded_for;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">http {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">upstream</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">backend</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">{</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;font-style:italic;">server</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">localhost</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">3000</span><span style="color:#B31D28;font-style:italic;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;font-style:italic;">server</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">localhost:</span><span style="color:#005CC5;">3001</span><span style="color:#B31D28;font-style:italic;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    server {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;font-style:italic;">listen</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">82;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;font-style:italic;">server_name</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">localhost;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;font-style:italic;">location</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">/</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">{</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#B31D28;font-style:italic;">proxy_pass</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">http</span><span style="color:#24292E;">:</span><span style="color:#6A737D;">//backend;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#B31D28;font-style:italic;">proxy_set_header</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">Host</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">$host;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#B31D28;font-style:italic;">proxy_set_header</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">X-Real-IP</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">$remote_addr;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#B31D28;font-style:italic;">proxy_set_header</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">X-Forwarded-For</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">$proxy_add_x_forwarded_for;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>这样配置后，我们打开 2 个浏览器窗口，访问 localhost:82，会发现一个代理到了 localhost:3000，一个代理到了 localhost:3001</p>`,28),r=[i];function E(f,B,D,d,h,F){return n(),l("div",null,r)}const g=s(y,[["render",E]]);export{_ as __pageData,g as default};
